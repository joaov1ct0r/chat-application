{
  "name": "node-chat-socket-mvc",
  "author": "github.com/joaov1ct0r",
  "version": "1.0.0",
  "description": "Sistema feito em arquitetura MVC de registro e login de usuarios com chat para conversas entre usuarios registrados, feito em JavaScript utilizando o runtime NodeJS com o framework Express com TypeScript, protegendo rotas utilizando JWT, autenticando dados de entrada com Joi e criando models, migrations e armazenando dados no banco de dados MySQL utilizando o ORM TypeORM. Testes unitários e de integração feitos com Jest e SuperTest, ambientes de produção e desenvolvimento criados em containers Docker utilizando Dockerfile para multi stage building e Docker Compose para orquestração de containers.",
  "main": "./build/index.js",
  "type": "module",
  "scripts": {
    "prepare": "husky install",
    "lint-staged": "lint-staged",
    "dev": "ts-node-dev -r dotenv/config -r tsconfig-paths/register src/index.ts dotenv_config_path=.env",
    "dev:debug": "ts-node-dev -r dotenv/config -r tsconfig-paths/register --transpile-only --respawn --inspect=4321 --project tsconfig.json src/index.ts dotenv_config_path=.env",
    "build": "rimraf ./build && tsc && tsc-alias",
    "start": "npm run build && node -r dotenv/config build/index.js dotenv_config_path=.env",
    "test": "NODE_ENV='test'; npm pkg set type='module'; jest",
    "test:coverage": "NODE_ENV='test'; jest --coverage",
    "test:watch": "NODE_ENV='test'; jest --watch",
    "test:verbose": "NODE_ENV='test'; jest --verbose"
  }
  "lint-staged": {
    "*.ts": [
      "eslint --fix"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "chat",
    "nodejs",
    "express",
    "mysql",
    "typeorm",
    "docker",
    "docker-compose",
    "typescript",
    "@hapi/joi",
    "bcryptjs",
    "cookie-parser",
    "cors",
    "dotenv",
    "ioredis",
    "jsonwebtoken",
    "mysql2",
    "reflect-metadata",
    "socket.io",
    "swagger",
    "@types",
    "babel",
    "eslint",
    "prettier",
    "jest",
    "jest-mock-extended",
    "rimraf",
    "ts-jest",
    "ts-node",
    "ts-node-dev"
  ],
  "license": "MIT",
  "dependencies": {
    "@hapi/joi": "^17.1.1",
    "bcryptjs": "^2.4.3",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^13.0.0",
    "express": "^4.17.2",
    "ioredis": "^5.2.2",
    "jsonwebtoken": "^8.5.1",
    "mysql2": "^2.3.3",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "socket.io": "^4.4.1",
    "swagger-ui-express": "^4.4.0",
    "typeorm": "^0.3.10",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@rocketseat/eslint-config": "^2.1.0",
    "@tsconfig/node16": "^1.0.3",
    "@types/bcryptjs": "^2.4.2",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/hapi__joi": "^17.1.8",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^29.1.1",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/node": "^17.0.8",
    "@types/supertest": "^2.0.12",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "babel-eslint": "^10.1.0",
    "eslint": "^8.7.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-n": "^15.2.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^6.0.0",
    "husky": "^8.0.3",
    "jest": "^29.2.2",
    "jest-mock-extended": "^3.0.1",
    "lint-staged": "^13.2.1",
    "prettier": "^2.6.2",
    "supertest": "^6.3.1",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^1.1.8",
    "ts-standard": "^12.0.2",
    "tsc-alias": "^1.8.8",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^4.5.4"
  }
}
